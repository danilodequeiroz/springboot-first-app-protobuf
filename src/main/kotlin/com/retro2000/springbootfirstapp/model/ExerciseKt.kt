// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: user.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.retro2000.springbootfirstapp.model;

@kotlin.jvm.JvmName("-initializeexercise")
public inline fun exercise(block: com.retro2000.springbootfirstapp.model.ExerciseKt.Dsl.() -> kotlin.Unit): com.retro2000.springbootfirstapp.model.UserExercisesProto.Exercise =
  com.retro2000.springbootfirstapp.model.ExerciseKt.Dsl._create(com.retro2000.springbootfirstapp.model.UserExercisesProto.Exercise.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `Exercise`
 */
public object ExerciseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.retro2000.springbootfirstapp.model.UserExercisesProto.Exercise.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.retro2000.springbootfirstapp.model.UserExercisesProto.Exercise.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.retro2000.springbootfirstapp.model.UserExercisesProto.Exercise = _builder.build()

    /**
     * `int32 id = 1;`
     */
    public var id: kotlin.Int
      @JvmName("getId")
      get() = _builder.getId()
      @JvmName("setId")
      set(value) {
        _builder.setId(value)
      }
    /**
     * `int32 id = 1;`
     */
    public fun clearId() {
      _builder.clearId()
    }

    /**
     * `string howToDo = 2;`
     */
    public var howToDo: kotlin.String
      @JvmName("getHowToDo")
      get() = _builder.getHowToDo()
      @JvmName("setHowToDo")
      set(value) {
        _builder.setHowToDo(value)
      }
    /**
     * `string howToDo = 2;`
     */
    public fun clearHowToDo() {
      _builder.clearHowToDo()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class FeelingProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * `repeated .Feeling feeling = 3;`
     */
     public val feeling: com.google.protobuf.kotlin.DslList<com.retro2000.springbootfirstapp.model.UserExercisesProto.Feeling, FeelingProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getFeelingList()
      )
    /**
     * `repeated .Feeling feeling = 3;`
     * @param value The feeling to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addFeeling")
    public fun com.google.protobuf.kotlin.DslList<com.retro2000.springbootfirstapp.model.UserExercisesProto.Feeling, FeelingProxy>.add(value: com.retro2000.springbootfirstapp.model.UserExercisesProto.Feeling) {
      _builder.addFeeling(value)
    }
    /**
     * `repeated .Feeling feeling = 3;`
     * @param value The feeling to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignFeeling")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<com.retro2000.springbootfirstapp.model.UserExercisesProto.Feeling, FeelingProxy>.plusAssign(value: com.retro2000.springbootfirstapp.model.UserExercisesProto.Feeling) {
      add(value)
    }
    /**
     * `repeated .Feeling feeling = 3;`
     * @param values The feeling to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllFeeling")
    public fun com.google.protobuf.kotlin.DslList<com.retro2000.springbootfirstapp.model.UserExercisesProto.Feeling, FeelingProxy>.addAll(values: kotlin.collections.Iterable<com.retro2000.springbootfirstapp.model.UserExercisesProto.Feeling>) {
      _builder.addAllFeeling(values)
    }
    /**
     * `repeated .Feeling feeling = 3;`
     * @param values The feeling to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllFeeling")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<com.retro2000.springbootfirstapp.model.UserExercisesProto.Feeling, FeelingProxy>.plusAssign(values: kotlin.collections.Iterable<com.retro2000.springbootfirstapp.model.UserExercisesProto.Feeling>) {
      addAll(values)
    }
    /**
     * `repeated .Feeling feeling = 3;`
     * @param index The index to set the value at.
     * @param value The feeling to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setFeeling")
    public operator fun com.google.protobuf.kotlin.DslList<com.retro2000.springbootfirstapp.model.UserExercisesProto.Feeling, FeelingProxy>.set(index: kotlin.Int, value: com.retro2000.springbootfirstapp.model.UserExercisesProto.Feeling) {
      _builder.setFeeling(index, value)
    }
    /**
     * `repeated .Feeling feeling = 3;`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearFeeling")
    public fun com.google.protobuf.kotlin.DslList<com.retro2000.springbootfirstapp.model.UserExercisesProto.Feeling, FeelingProxy>.clear() {
      _builder.clearFeeling()
    }


    /**
     * `.google.protobuf.Timestamp last_updated = 5;`
     */
    public var lastUpdated: com.google.protobuf.Timestamp
      @JvmName("getLastUpdated")
      get() = _builder.getLastUpdated()
      @JvmName("setLastUpdated")
      set(value) {
        _builder.setLastUpdated(value)
      }
    /**
     * `.google.protobuf.Timestamp last_updated = 5;`
     */
    public fun clearLastUpdated() {
      _builder.clearLastUpdated()
    }
    /**
     * `.google.protobuf.Timestamp last_updated = 5;`
     * @return Whether the lastUpdated field is set.
     */
    public fun hasLastUpdated(): kotlin.Boolean {
      return _builder.hasLastUpdated()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.retro2000.springbootfirstapp.model.UserExercisesProto.Exercise.copy(block: com.retro2000.springbootfirstapp.model.ExerciseKt.Dsl.() -> kotlin.Unit): com.retro2000.springbootfirstapp.model.UserExercisesProto.Exercise =
  com.retro2000.springbootfirstapp.model.ExerciseKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val com.retro2000.springbootfirstapp.model.UserExercisesProto.ExerciseOrBuilder.lastUpdatedOrNull: com.google.protobuf.Timestamp?
  get() = if (hasLastUpdated()) getLastUpdated() else null

