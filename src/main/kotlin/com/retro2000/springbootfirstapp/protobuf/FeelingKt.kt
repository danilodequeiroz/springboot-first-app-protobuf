// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: user.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.retro2000.springbootfirstapp.protobuf;

@kotlin.jvm.JvmName("-initializefeeling")
public inline fun feeling(block: com.retro2000.springbootfirstapp.protobuf.FeelingKt.Dsl.() -> kotlin.Unit): com.retro2000.springbootfirstapp.protobuf.UserModel.Feeling =
  com.retro2000.springbootfirstapp.protobuf.FeelingKt.Dsl._create(com.retro2000.springbootfirstapp.protobuf.UserModel.Feeling.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `Feeling`
 */
public object FeelingKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.retro2000.springbootfirstapp.protobuf.UserModel.Feeling.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.retro2000.springbootfirstapp.protobuf.UserModel.Feeling.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.retro2000.springbootfirstapp.protobuf.UserModel.Feeling = _builder.build()

    /**
     * `int32 id = 1;`
     */
    public var id: kotlin.Int
      @JvmName("getId")
      get() = _builder.getId()
      @JvmName("setId")
      set(value) {
        _builder.setId(value)
      }
    /**
     * `int32 id = 1;`
     */
    public fun clearId() {
      _builder.clearId()
    }

    /**
     * `string description = 2;`
     */
    public var description: kotlin.String
      @JvmName("getDescription")
      get() = _builder.getDescription()
      @JvmName("setDescription")
      set(value) {
        _builder.setDescription(value)
      }
    /**
     * `string description = 2;`
     */
    public fun clearDescription() {
      _builder.clearDescription()
    }

    /**
     * `string image = 3;`
     */
    public var image: kotlin.String
      @JvmName("getImage")
      get() = _builder.getImage()
      @JvmName("setImage")
      set(value) {
        _builder.setImage(value)
      }
    /**
     * `string image = 3;`
     */
    public fun clearImage() {
      _builder.clearImage()
    }

    /**
     * `.Feeling.Mood mood = 4;`
     */
    public var mood: com.retro2000.springbootfirstapp.protobuf.UserModel.Feeling.Mood
      @JvmName("getMood")
      get() = _builder.getMood()
      @JvmName("setMood")
      set(value) {
        _builder.setMood(value)
      }
    public var moodValue: kotlin.Int
      @JvmName("getMoodValue")
      get() = _builder.getMoodValue()
      @JvmName("setMoodValue")
      set(value) {
        _builder.setMoodValue(value)
      }
    /**
     * `.Feeling.Mood mood = 4;`
     */
    public fun clearMood() {
      _builder.clearMood()
    }

    /**
     * `.google.protobuf.Timestamp last_updated = 5;`
     */
    public var lastUpdated: com.google.protobuf.Timestamp
      @JvmName("getLastUpdated")
      get() = _builder.getLastUpdated()
      @JvmName("setLastUpdated")
      set(value) {
        _builder.setLastUpdated(value)
      }
    /**
     * `.google.protobuf.Timestamp last_updated = 5;`
     */
    public fun clearLastUpdated() {
      _builder.clearLastUpdated()
    }
    /**
     * `.google.protobuf.Timestamp last_updated = 5;`
     * @return Whether the lastUpdated field is set.
     */
    public fun hasLastUpdated(): kotlin.Boolean {
      return _builder.hasLastUpdated()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.retro2000.springbootfirstapp.protobuf.UserModel.Feeling.copy(block: com.retro2000.springbootfirstapp.protobuf.FeelingKt.Dsl.() -> kotlin.Unit): com.retro2000.springbootfirstapp.protobuf.UserModel.Feeling =
  com.retro2000.springbootfirstapp.protobuf.FeelingKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val com.retro2000.springbootfirstapp.protobuf.UserModel.FeelingOrBuilder.lastUpdatedOrNull: com.google.protobuf.Timestamp?
  get() = if (hasLastUpdated()) getLastUpdated() else null

